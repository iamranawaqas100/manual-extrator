name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.2.3
  workflow_dispatch:  # Allow manual trigger
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1)'
        required: true
        type: string

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
  issues: read
  pull-requests: read

jobs:
  release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Get version from tag or input
      id: version
      shell: bash
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        fi
    
    - name: Update package.json version (if needed)
      shell: bash
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        NEW_VERSION="${{ steps.version.outputs.version }}"
        echo "Current version: $CURRENT_VERSION"
        echo "Target version: $NEW_VERSION"
        
        if [ "$CURRENT_VERSION" != "$NEW_VERSION" ]; then
          echo "Updating version from $CURRENT_VERSION to $NEW_VERSION"
          npm version $NEW_VERSION --no-git-tag-version
        else
          echo "Version already matches target version $NEW_VERSION, skipping update"
        fi
    
    - name: Build and publish for Windows
      run: |
        npm run build:win
        npx electron-builder --win --publish=always
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-windows
        path: dist/
        retention-days: 30

  create-release:
    needs: release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## What's Changed
          
          * Auto-generated release for version ${{ github.ref_name }}
          * Windows installer available for download below
          
          ## Installation
          
          ### Windows
          - Download `Advanced-Data-Extractor-Setup-*.exe`
          - Run the installer
          
          ## Auto-Updates
          
          Once installed, the app will automatically check for and install future updates.
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
